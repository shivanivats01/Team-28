/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Physician;

/**
 *
 * @author riyamoitra
 */

import Business.Doctor.Doctor;
import Business.Ecosystem;
import Business.Hospital.Hospital;
import Business.Lab.Lab;
import Business.Patient.Patient;
import Business.Pharmacy.Pharmacy;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestRequest;
import Business.WorkQueue.PharmacyRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class CreateLabTestRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateLabTestRequestJPanel
     */
    private JPanel CardLayoutJPanel;
    private Ecosystem business;
    private UserAccount account;
    private Doctor doctor;
    private Object hospitalNameComboBox;
    
    
    CreateLabTestRequestJPanel(JPanel CardLayoutJPanel, UserAccount account, Ecosystem business, Doctor doctor) {

        initComponents();
        this.CardLayoutJPanel = CardLayoutJPanel;
        this.account=account;
        this.business = business;
        
        populateLabComboBox();

        populatePatientComboBox();
        populateTestcomboBox();

    }
 public ArrayList<Patient> getAssociatedPatients() {
        Set<String> patientIdSet = new HashSet<>();
        ArrayList<Patient> list = new ArrayList();
        
        ArrayList<WorkRequest> workRequestOfDoctor = this.account.getWorkQueue().getWorkRequestList();
        
        for(WorkRequest w: workRequestOfDoctor) {
            String patientId = w.getSender().getId();
            
            if(!patientIdSet.contains(patientId)) {
                list.add((Patient) w.getSender().getDetails());
                patientIdSet.add(patientId);
            }
        }
        
        return list;
        
    }
    
    public void populateLabComboBox() {
       
        ArrayList<Lab> labList = business.getLabDirectory().getLabList();
        Lab[] comboBoxModel4 = labList.toArray(new Lab[0]);
        
        
        labListComboBox.setModel(new DefaultComboBoxModel<Lab>(comboBoxModel4));
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        patientjComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        labListComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        testListComboBox = new javax.swing.JComboBox<>();
        sendRequestBtn1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Create Lab Test Request");

        jButton1.setText("< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Patient ID:");

        backBtn.setText("<back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Select Lab:");

        labListComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labListComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setText("Select Test:");

        testListComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testListComboBoxActionPerformed(evt);
            }
        });

        sendRequestBtn1.setText("Send Request");
        sendRequestBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendRequestBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(backBtn)
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(labListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(patientjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(testListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(sendRequestBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(backBtn)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(patientjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(labListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(testListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(sendRequestBtn1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(85, 85, 85))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        CardLayoutJPanel.remove(this);
        CardLayout layout = (CardLayout) CardLayoutJPanel.getLayout();
        layout.previous(CardLayoutJPanel);
    }//GEN-LAST:event_backBtnActionPerformed

    private void labListComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labListComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_labListComboBoxActionPerformed

    private void testListComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testListComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_testListComboBoxActionPerformed

    private void sendRequestBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendRequestBtn1ActionPerformed
        // TODO add your handling code here:
        
        Patient patient = (Patient) patientjComboBox.getSelectedItem();
        Lab lab = (Lab) labListComboBox.getSelectedItem();

        if(patient == null || lab == null) {
            JOptionPane.showMessageDialog(null, "Please select all fields", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        LabTestRequest newRequest = new LabTestRequest();
        newRequest.setSender(account);
        newRequest.setPatient(patient);
        newRequest.setReceiver(this.business.getUserAccountDirectory().getUserById(lab.getLabID()));
        newRequest.setStatus("pending lab approval");
        newRequest.setRequestDate(new Date());

        this.business.getUserAccountDirectory().getUserById(lab.getLabID()).getWorkQueue().getWorkRequestList().add(newRequest);
        this.account.getWorkQueue().getWorkRequestList().add(newRequest);

        JOptionPane.showMessageDialog(null, "Request sent to Lab for Test");

        

    }//GEN-LAST:event_sendRequestBtn1ActionPerformed
public void populateTestcomboBox() {
        
        ArrayList<String> testList = new ArrayList<String>();
        testList.add("MRI");
        testList.add("CT Scan");
        testList.add("Blood Sample");
        testList.add("X Ray");
        
        String[] comboBoxModel1 = testList.toArray(new String[0]);
        
        
        testListComboBox.setModel(new DefaultComboBoxModel<String>(comboBoxModel1));
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<Lab> labListComboBox;
    private javax.swing.JComboBox<Patient> patientjComboBox;
    private javax.swing.JButton sendRequestBtn1;
    private javax.swing.JComboBox<String> testListComboBox;
    // End of variables declaration//GEN-END:variables

    private void populatePatientComboBox() {

        
        ArrayList<Patient> list = this.getAssociatedPatients();
        Patient[] comboBoxModel4 = list.toArray(new Patient[0]);
    
        patientjComboBox.setModel(new DefaultComboBoxModel<Patient>(comboBoxModel4));
        

    }

}
