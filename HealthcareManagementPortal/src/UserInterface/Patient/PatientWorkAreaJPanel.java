/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Patient;

import Business.Appointment.Appointment;
import Business.Appointment.AppointmentSchedule;
import Business.Doctor.DoctorDirectory;
import Business.Ecosystem;
import Business.Hospital.Hospital;
import Business.Hospital.HospitalDirectory;
import Business.Patient.Patient;
import Business.Patient.PatientDirectory;
import Business.Slot.Slot;
import Business.Slot.SlotList;
import Business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author riyamoitra
 */
public class PatientWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientWorkAreaJPanel
     */
    private JPanel CardLayoutJPanel;
    private UserAccount account;
    private Ecosystem business;
//    private PatientDirectory patientDirectory;
//    private HospitalDirectory hospitalDirectory;
//    private DoctorDirectory doctorDirectory;
//    private AppointmentSchedule appointmentSchedule;
    private SlotList slotList;

    public PatientWorkAreaJPanel(JPanel CardLayoutJPanel, UserAccount account, Ecosystem business) {

        initComponents();
        this.CardLayoutJPanel = CardLayoutJPanel;
        this.account=account;
        this.business = business;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        slotJTable = new javax.swing.JTable();
        refreshbtn = new javax.swing.JButton();
        requestAppointmentbtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        workRequestJTable1 = new javax.swing.JTable();
        refreshTestJButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        slotJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hospital", "Department", "Time", "Duration"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(slotJTable);

        refreshbtn.setText("Refresh");
        refreshbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbtnActionPerformed(evt);
            }
        });

        requestAppointmentbtn.setText("Request Appointment");
        requestAppointmentbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestAppointmentbtnActionPerformed(evt);
            }
        });

        workRequestJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Result", "Hospital", "Department", "Doctor", "Appointment Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(workRequestJTable1);

        refreshTestJButton1.setText("Refresh");
        refreshTestJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 688, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(refreshbtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(requestAppointmentbtn)
                            .addGap(117, 117, 117))
                        .addComponent(jScrollPane3)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(refreshTestJButton1)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 459, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(32, 32, 32)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(refreshbtn)
                        .addComponent(requestAppointmentbtn))
                    .addGap(54, 54, 54)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(refreshTestJButton1)
                    .addContainerGap(91, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnActionPerformed
        // TODO add your handling code here:
        populateSlotTable();
    }//GEN-LAST:event_refreshbtnActionPerformed
public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable1.getModel();
        model.setRowCount(0);
        
//        for(Appointment appointment: business.getAppointmentSchedule().getAppointmentSchedule()){
//            if(appointment.getPatient().getPatientID().equalsIgnoreCase(account.getEmployee().getName())){
//                Object[] row = new Object[10];
//                    row[0] = appointment.getMessage();
//                    row[1] = appointment.getReceiver();
//                    row[2] = appointment.getStatus();
//                    row[3] = (appointment.getResult() == null ? "Waiting" : appointment.getResult());
//                    row[4] = appointment.getHospital().getName();
//                   
//                   
//                    row[5] = (appointment.getDoctor() == null) ? "Awaiting Confirmation" : appointment.getDoctor().getName();
//                    row[6] = appointment.getAppointmentId();
//                    model.addRow(row);
//            }
//        }
}

    /**
     *
     */
    public void populateSlotTable(){
        DefaultTableModel model = (DefaultTableModel) slotJTable.getModel();
        model.setRowCount(0);
        for(Slot slot: slotList.getSlotList()){
            
        
                    Object[] row = new Object[4];
//                    row[0] = hospitalDirectory.getHospitalName(slot.getHospitalId());
                    row[1] = slot.getDepartment();
                    
                    row[2] = slot.getIn_time();
                    row[3] = slot.getDuration();
                    model.addRow(row);
        
    }
    }
   
        
    private void requestAppointmentbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestAppointmentbtnActionPerformed
        // TODO add your handling code here:
        int row = slotJTable.getSelectedRow();
        int count = slotJTable.getSelectedRowCount();
        if(count == 1){
            if(row >= 0){
               // int quantity = Integer.parseInt(quantityBox.getSelectedItem().toString());
//                Hospital hospital = hospitalDirectory.getHospital(slotList.getSlotByIndex(row).getHospitalId());
//                Patient patient = patientDirectory.getPatient(account.getEmployee().getName());
                Slot slot = slotList.getSlotByIndex(row);
                String status = "Awaiting Appointment Confirmation";

//                Appointment appointmentRequest = business.getAppointmentSchedule().addAppointment();
//                appointmentRequest.setAppointmentId("A"+(business.getAppointmentSchedule().getAppointmentSchedule().size()));
//               // orderRequest.setOrderStatusPercentage(25);
//                appointmentRequest.setSlot(slot);
//                appointmentRequest.setHospital(hospital);
//                appointmentRequest.setPatient(patient);
//               
//                appointmentRequest.setMessage("Appointment request has been sent ");
//                appointmentRequest.setSender(account);
//                appointmentRequest.setStatus(status);
//                business.getWorkQueue().getWorkRequestList().add(appointmentRequest);
//                JOptionPane.showMessageDialog(null, "Your Appointment has been sucessfully booked!");
//                populateRequestTable();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select one row!");
        }
    }//GEN-LAST:event_requestAppointmentbtnActionPerformed

    private void refreshTestJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButton1ActionPerformed

        populateRequestTable();
    }//GEN-LAST:event_refreshTestJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton refreshTestJButton1;
    private javax.swing.JButton refreshbtn;
    private javax.swing.JButton requestAppointmentbtn;
    private javax.swing.JTable slotJTable;
    private javax.swing.JTable workRequestJTable1;
    // End of variables declaration//GEN-END:variables
}
