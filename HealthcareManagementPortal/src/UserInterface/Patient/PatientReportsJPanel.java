/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Patient;

import Business.Doctor.Doctor;
import Business.Ecosystem;
import Business.Lab.Lab;
import Business.Patient.Patient;
import Business.Patient.PatientDetails;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.Physician.CreatePrescriptionJPanel;
import java.awt.CardLayout;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shivanivats
 */
public class PatientReportsJPanel extends javax.swing.JPanel {
    
    private JPanel CardLayoutJPanel;
    private UserAccount account;
    private Patient patient;
    private boolean isPatientLogged;

    /**
     * Creates new form PatientHistoryJPanel
     */
    public PatientReportsJPanel(JPanel CardLayoutJPanel, Patient patient, UserAccount account, boolean isPatientLogged) {
        initComponents();
        
        this.CardLayoutJPanel = CardLayoutJPanel;
        this.patient = patient;
        this.account = account;
        this.isPatientLogged = isPatientLogged;
        
        jButton2.setVisible(isPatientLogged);
        
           
        
        populateTable();
    }
    
    public void populateTable() {
            
        int rowCount = jTable1.getRowCount();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        
        ArrayList<LabTestRequest> requests = new ArrayList();
        for(WorkRequest w : this.account.getWorkQueue().getWorkRequestList()) {
            
            
            
            if(w.getStatus().equals("pending lab approval") || w.getStatus().equals("lab test canceled") || w.getStatus().equals("lab request in-progress") || w.getStatus().equals("lab test completed")) {
                LabTestRequest lr = (LabTestRequest) w;
                
                
                if(lr.getPatient().getPatientID().equals(patient.getPatientID())) {
                    requests.add(lr);
                }
            }
        }
        
        
        for(LabTestRequest r: requests) {
            Object row[] = new Object[5];
            row[0] = ((Doctor) r.getSender().getDetails()).getDoctorId();
            row[1] = ((Lab) r.getReceiver().getDetails()).getLabID();
            row[2] = r;
            row[3] = r.getResolveDate();
            row[4] = r.getStatus();
            
            model.addRow(row);
        }
        
        jTable1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Physician", "Lab", "ReceivedDate", "ResolvedDate", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 35, 622, 309));

        jButton1.setText("View Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(507, 379, -1, -1));

        jButton2.setText("< back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 379, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
        int row = jTable1.getSelectedRow();
        
        if(row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        LabTestRequest details = (LabTestRequest) jTable1.getValueAt(row, 2);
        System.out.print(details.getImage());
        if(details.getStatus().equals("lab test completed")) {
            PatientReportViewJPanel patientReportViewJPanel = new PatientReportViewJPanel(CardLayoutJPanel, account, details.getImage());
            CardLayoutJPanel.add("PatientReportViewJPanel", patientReportViewJPanel);
            CardLayout layout = (CardLayout) CardLayoutJPanel.getLayout();
            layout.next(CardLayoutJPanel);  
        } else {
            JOptionPane.showMessageDialog(null, "No reports available for an incomplete test");
            return;
        }
        
        
        
        // OPEN THE PDF
        
//        
//        
//        PatientDetails details = (PatientDetails) jTable1.getValueAt(row, 2);
//        
//        PatientDetailsJPanel patientDetailsJPanel = new PatientDetailsJPanel(CardLayoutJPanel, details, account);
//        CardLayoutJPanel.add("PatientDetailsJPanel", patientDetailsJPanel);
//        CardLayout layout = (CardLayout) CardLayoutJPanel.getLayout();
//        layout.next(CardLayoutJPanel); 
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        CardLayoutJPanel.remove(this);
        CardLayout layout = (CardLayout) CardLayoutJPanel.getLayout();
        layout.previous(CardLayoutJPanel);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
